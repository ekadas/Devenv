#!/bin/bash

if [ $# -eq 0 ]; then
   basedir="$(dirname "$0")/.."
else
   basedir="$1"
fi
# shellcheck source=util.sh
source "$basedir/util.sh"

os=$(uname -s)
# this script installs or updates lsp servers and their dependencies

pprint() {
   print_green "\nâ†’ $1"
}

npm_install() {
   pprint "$1"
   npm install --location=global "$1"
}

pprint efm-langserver
if [ "$os" = "Darwin" ]; then
   brew install efm-langserver
else
   GOBIN=~/.local/bin go install github.com/mattn/efm-langserver@latest
fi

pprint lua-language-server
if [ "$os" = "Darwin" ]; then
   brew install saadparwaiz1/personal/lua-language-server
else
   sudo pacman -S lua-language-server
   if [ -f "/bin/lua-language-server" ]; then
      sudo mv /bin/lua-language-server /bin/lua-langserver
   fi
fi

pprint "shell script"
npm install --location=global bash-language-server
if [ "$os" = "Darwin" ]; then
   brew install shfmt shellcheck
else
   sudo pacman -S shfmt shellcheck
fi

pprint java
if [ "$os" = "Darwin" ]; then
   jdtls_path=/usr/local/share/eclipse.jdt.ls

   if [ -d "$jdtls_path" ]; then
      (
         cd $jdtls_path || return
         git pp

         ./mvnw package -DSkipTests
      )
   else
      git clone git@github.com:eclipse/eclipse.jdt.ls.git $jdtls_path
      (
         cd $jdtls_path || return
         ./mvnw clean verify
      )
   fi

   cp "$basedir/tools/java/jdtls" /usr/local/bin/jdtls
fi
npm install --location=global prettier-plugin-java

pprint rust
if [ "$os" = "Darwin" ]; then
   brew install rust-analyzer
else
   sudo pacman -S rust-analyzer
fi

npm_install prettier

pprint "node & typescript"
npm install --location=global standard
npm install --location=global typescript
npm install --location=global typescript-language-server
npm install --location=global ts-standard

pprint "json, html & css"
npm install --location=global vscode-langservers-extracted

npm_install yarn

pprint yaml

npm install --location=global dockerfilelint
if [ "$os" = "Darwin" ]; then
   brew install yamllint
else
   sudo pacman -S yamllint
fi
yarn global add yaml-language-server --prefix /usr/local

pprint elm
npm install --location=global elm
npm install --location=global elm-test
npm install --location=global elm-format
npm install --location=global @elm-tooling/elm-language-server

pprint docker
npm install --location=global dockerfilelint
if [ "$os" = "Darwin" ]; then
   brew install hadolint
else
   sudo pacman -S hadolint
fi

pprint markdown
npm install --location=global markdownlint
npm install --location=global markdownlint-cli
cp "$basedir/tools/nvim/markdownlintrc" ~/.markdownlintrc

if [ "$os" = "Darwin" ]; then
   pprint cfn-lint
   brew install cfn-lint
fi

pprint kubeval
if [ "$os" = "Darwin" ]; then
   brew install kubeval
fi
